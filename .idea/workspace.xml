<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="ChangeListManager">
    <list default="true" id="4b0cc9f9-d9b2-457d-bed7-62ee769368e5" name="Default Changelist" comment="">
      <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/lambda/stream/StreamDemo.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/lambda/stream/StreamDemo.java" afterDir="false" />
    </list>
    <option name="EXCLUDED_CONVERTED_TO_IGNORED" value="true" />
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="FileTemplateManagerImpl">
    <option name="RECENT_TEMPLATES">
      <list>
        <option value="package-info" />
        <option value="Interface" />
        <option value="Class" />
      </list>
    </option>
  </component>
  <component name="Git.Settings">
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
  </component>
  <component name="ProjectId" id="1zu6qE2vunj4dHgV83GrQ4pb8L1" />
  <component name="ProjectLevelVcsManager" settingsEditedManually="true">
    <ConfirmationsSetting value="2" id="Add" />
  </component>
  <component name="PropertiesComponent">
    <property name="ASKED_ADD_EXTERNAL_FILES" value="true" />
    <property name="SHARE_PROJECT_CONFIGURATION_FILES" value="true" />
    <property name="WebServerToolWindowFactoryState" value="false" />
    <property name="aspect.path.notification.shown" value="true" />
    <property name="extract.method.default.visibility" value="private" />
    <property name="last_opened_file_path" value="$PROJECT_DIR$/src/lambda/why4" />
    <property name="nodejs_package_manager_path" value="npm" />
    <property name="settings.editor.selected.configurable" value="File.Encoding" />
  </component>
  <component name="RecentsManager">
    <key name="CreateClassDialog.RecentsKey">
      <recent name="lambda.why2" />
      <recent name="collection.List" />
    </key>
    <key name="CopyFile.RECENT_KEYS">
      <recent name="C:\D\my_codespace\Javase\src\lambda\why4" />
      <recent name="C:\D\my_codespace\Javase\src\lambda\why2" />
      <recent name="C:\D\my_codespace\Javase\src" />
      <recent name="C:\D\my_codespace\Javase\src\thread\pc3" />
      <recent name="C:\D\my_codespace\Javase\src\thread\pc2" />
    </key>
    <key name="CopyClassDialog.RECENTS_KEY">
      <recent name="lambda.function_ref" />
      <recent name="lambda.lambda_exec" />
      <recent name="lambda.why3" />
      <recent name="lambda.why4" />
      <recent name="net.server" />
    </key>
    <key name="MoveFile.RECENT_KEYS">
      <recent name="C:\D\my_codespace\Javase" />
      <recent name="C:\D\my_codespace\Javase\src" />
      <recent name="C:\D\my_codespace\Javase\src\net" />
    </key>
  </component>
  <component name="RunDashboard">
    <option name="ruleStates">
      <list>
        <RuleState>
          <option name="name" value="ConfigurationTypeDashboardGroupingRule" />
        </RuleState>
        <RuleState>
          <option name="name" value="StatusDashboardGroupingRule" />
        </RuleState>
      </list>
    </option>
  </component>
  <component name="RunManager" selected="Application.Construct_Method_Ref">
    <configuration name="Construct_Method_Ref" type="Application" factoryName="Application" temporary="true" nameIsGenerated="true">
      <option name="MAIN_CLASS_NAME" value="lambda.function_ref.Construct_Method_Ref" />
      <module name="Javase" />
      <extension name="coverage">
        <pattern>
          <option name="PATTERN" value="lambda.function_ref.*" />
          <option name="ENABLED" value="true" />
        </pattern>
      </extension>
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <configuration name="Instance_method_ref" type="Application" factoryName="Application" temporary="true" nameIsGenerated="true">
      <option name="MAIN_CLASS_NAME" value="lambda.function_ref.Instance_method_ref" />
      <module name="Javase" />
      <extension name="coverage">
        <pattern>
          <option name="PATTERN" value="lambda.function_ref.*" />
          <option name="ENABLED" value="true" />
        </pattern>
      </extension>
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <configuration name="Lambda_Test" type="Application" factoryName="Application" temporary="true" nameIsGenerated="true">
      <option name="MAIN_CLASS_NAME" value="lambda.function_ref.Lambda_Test" />
      <module name="Javase" />
      <extension name="coverage">
        <pattern>
          <option name="PATTERN" value="lambda.function_ref.*" />
          <option name="ENABLED" value="true" />
        </pattern>
      </extension>
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <configuration name="Object_Method_ref" type="Application" factoryName="Application" temporary="true" nameIsGenerated="true">
      <option name="MAIN_CLASS_NAME" value="lambda.function_ref.Object_Method_ref" />
      <module name="Javase" />
      <extension name="coverage">
        <pattern>
          <option name="PATTERN" value="lambda.function_ref.*" />
          <option name="ENABLED" value="true" />
        </pattern>
      </extension>
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <configuration name="Static_Method_ref" type="Application" factoryName="Application" temporary="true" nameIsGenerated="true">
      <option name="MAIN_CLASS_NAME" value="lambda.function_ref.Static_Method_ref" />
      <module name="Javase" />
      <extension name="coverage">
        <pattern>
          <option name="PATTERN" value="lambda.function_ref.*" />
          <option name="ENABLED" value="true" />
        </pattern>
      </extension>
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <configuration name="Test" type="Application" factoryName="Application" temporary="true" nameIsGenerated="true">
      <option name="MAIN_CLASS_NAME" value="lambda.why1.Test" />
      <module name="Javase" />
      <extension name="coverage">
        <pattern>
          <option name="PATTERN" value="lambda.why1.*" />
          <option name="ENABLED" value="true" />
        </pattern>
      </extension>
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <recent_temporary>
      <list>
        <item itemvalue="Application.Construct_Method_Ref" />
        <item itemvalue="Application.Object_Method_ref" />
        <item itemvalue="Application.Instance_method_ref" />
        <item itemvalue="Application.Static_Method_ref" />
        <item itemvalue="Application.Lambda_Test" />
      </list>
    </recent_temporary>
  </component>
  <component name="StructureViewFactory">
    <option name="ACTIVE_ACTIONS" value=",SHOW_INTERFACES,SHOW_INHERITED,VISIBILITY_SORTER,SHOW_PROPERTIES,ALPHA_COMPARATOR" />
  </component>
  <component name="SvnConfiguration">
    <configuration />
  </component>
  <component name="TaskManager">
    <task active="true" id="Default" summary="Default task">
      <changelist id="4b0cc9f9-d9b2-457d-bed7-62ee769368e5" name="Default Changelist" comment="" />
      <created>1634985814178</created>
      <option name="number" value="Default" />
      <option name="presentableId" value="Default" />
      <updated>1634985814178</updated>
      <workItem from="1634985817638" duration="10812000" />
      <workItem from="1635070654908" duration="1715000" />
      <workItem from="1635156165417" duration="7738000" />
      <workItem from="1635577658759" duration="9266000" />
      <workItem from="1635765805637" duration="5828000" />
      <workItem from="1635936773828" duration="3775000" />
      <workItem from="1636023399284" duration="11013000" />
      <workItem from="1636279883136" duration="4700000" />
      <workItem from="1636367346049" duration="1254000" />
      <workItem from="1636370199387" duration="2192000" />
      <workItem from="1636452547975" duration="654000" />
      <workItem from="1636538735248" duration="5020000" />
      <workItem from="1636625243528" duration="2728000" />
      <workItem from="1636715193448" duration="601000" />
      <workItem from="1636885981828" duration="1069000" />
      <workItem from="1636972066646" duration="9179000" />
      <workItem from="1637317686661" duration="26293000" />
      <workItem from="1638180750083" duration="65730000" />
      <workItem from="1639813285697" duration="9744000" />
      <workItem from="1640006185463" duration="11909000" />
      <workItem from="1640493068020" duration="5960000" />
      <workItem from="1640605764721" duration="1256000" />
      <workItem from="1640872131040" duration="1198000" />
      <workItem from="1641118789202" duration="30671000" />
      <workItem from="1641654091872" duration="12448000" />
    </task>
    <task id="LOCAL-00058" summary="socket and ServerSocket communication :picture practice">
      <created>1640000769642</created>
      <option name="number" value="00058" />
      <option name="presentableId" value="LOCAL-00058" />
      <option name="project" value="LOCAL" />
      <updated>1640000769642</updated>
    </task>
    <task id="LOCAL-00059" summary="socket and ServerSocket communication :picture practice">
      <created>1640006224856</created>
      <option name="number" value="00059" />
      <option name="presentableId" value="LOCAL-00059" />
      <option name="project" value="LOCAL" />
      <updated>1640006224857</updated>
    </task>
    <task id="LOCAL-00060" summary="socket实现用户登录，且服务端响应，服务端不关闭">
      <created>1640446278734</created>
      <option name="number" value="00060" />
      <option name="presentableId" value="LOCAL-00060" />
      <option name="project" value="LOCAL" />
      <updated>1640446278735</updated>
    </task>
    <task id="LOCAL-00061" summary="socket实现用户登录，且服务端响应，服务端不关闭">
      <created>1640446420928</created>
      <option name="number" value="00061" />
      <option name="presentableId" value="LOCAL-00061" />
      <option name="project" value="LOCAL" />
      <updated>1640446420928</updated>
    </task>
    <task id="LOCAL-00062" summary="socket实现用户登录，且服务端响应，服务端不关闭---循环方式实现">
      <created>1640446470620</created>
      <option name="number" value="00062" />
      <option name="presentableId" value="LOCAL-00062" />
      <option name="project" value="LOCAL" />
      <updated>1640446470620</updated>
    </task>
    <task id="LOCAL-00063" summary="socket实现用户登录，且服务端响应，服务端不关闭---多线程方式">
      <created>1640446907422</created>
      <option name="number" value="00063" />
      <option name="presentableId" value="LOCAL-00063" />
      <option name="project" value="LOCAL" />
      <updated>1640446907422</updated>
    </task>
    <task id="LOCAL-00064" summary="socket实现用户登录，服务端校验用户数据---多线程方式">
      <created>1640485602854</created>
      <option name="number" value="00064" />
      <option name="presentableId" value="LOCAL-00064" />
      <option name="project" value="LOCAL" />
      <updated>1640485602854</updated>
    </task>
    <task id="LOCAL-00065" summary="inetSocketAdress">
      <created>1640486371316</created>
      <option name="number" value="00065" />
      <option name="presentableId" value="LOCAL-00065" />
      <option name="project" value="LOCAL" />
      <updated>1640486371316</updated>
    </task>
    <task id="LOCAL-00066" summary="UDP单向通信">
      <created>1640511905720</created>
      <option name="number" value="00066" />
      <option name="presentableId" value="LOCAL-00066" />
      <option name="project" value="LOCAL" />
      <updated>1640511905721</updated>
    </task>
    <task id="LOCAL-00067" summary="UDP特点">
      <created>1640522055790</created>
      <option name="number" value="00067" />
      <option name="presentableId" value="LOCAL-00067" />
      <option name="project" value="LOCAL" />
      <updated>1640522055790</updated>
    </task>
    <task id="LOCAL-00068" summary="lambda demo:任何 用函数式接口 的地方，均可用lambda表达式">
      <created>1640601707792</created>
      <option name="number" value="00068" />
      <option name="presentableId" value="LOCAL-00068" />
      <option name="project" value="LOCAL" />
      <updated>1640601707792</updated>
    </task>
    <task id="LOCAL-00069" summary="lambda之--什么是函数式接口">
      <created>1641120654034</created>
      <option name="number" value="00069" />
      <option name="presentableId" value="LOCAL-00069" />
      <option name="project" value="LOCAL" />
      <updated>1641120654034</updated>
    </task>
    <task id="LOCAL-00070" summary="lambda之-demo">
      <created>1641123057810</created>
      <option name="number" value="00070" />
      <option name="presentableId" value="LOCAL-00070" />
      <option name="project" value="LOCAL" />
      <updated>1641123057810</updated>
    </task>
    <task id="LOCAL-00071" summary="lambda之-demo">
      <created>1641202271703</created>
      <option name="number" value="00071" />
      <option name="presentableId" value="LOCAL-00071" />
      <option name="project" value="LOCAL" />
      <updated>1641202271703</updated>
    </task>
    <task id="LOCAL-00072" summary="lambda之- 实现学生 按成绩、分数过滤，不使用lambda 及使用策略模式实现">
      <created>1641205695329</created>
      <option name="number" value="00072" />
      <option name="presentableId" value="LOCAL-00072" />
      <option name="project" value="LOCAL" />
      <updated>1641205695329</updated>
    </task>
    <task id="LOCAL-00073" summary="lambda之- 实现学生 按成绩、分数过滤：基于V2使用 匿名内部类实现 的filter">
      <created>1641206578685</created>
      <option name="number" value="00073" />
      <option name="presentableId" value="LOCAL-00073" />
      <option name="project" value="LOCAL" />
      <updated>1641206578685</updated>
    </task>
    <task id="LOCAL-00074" summary="lambda之- 实现学生 按成绩、分数过滤：基于V3，匿名内部类 可以写成lambda表达式">
      <created>1641207159400</created>
      <option name="number" value="00074" />
      <option name="presentableId" value="LOCAL-00074" />
      <option name="project" value="LOCAL" />
      <updated>1641207159400</updated>
    </task>
    <task id="LOCAL-00075" summary="lambda表达式的写法">
      <created>1641384866886</created>
      <option name="number" value="00075" />
      <option name="presentableId" value="LOCAL-00075" />
      <option name="project" value="LOCAL" />
      <updated>1641384866886</updated>
    </task>
    <task id="LOCAL-00076" summary="lambda表达式的写法">
      <created>1641385337723</created>
      <option name="number" value="00076" />
      <option name="presentableId" value="LOCAL-00076" />
      <option name="project" value="LOCAL" />
      <updated>1641385337723</updated>
    </task>
    <task id="LOCAL-00077" summary="lambda表达式的写法">
      <created>1641385372514</created>
      <option name="number" value="00077" />
      <option name="presentableId" value="LOCAL-00077" />
      <option name="project" value="LOCAL" />
      <updated>1641385372514</updated>
    </task>
    <task id="LOCAL-00078" summary="lambda表达式的写法 ： 根据函数式接口中，抽象方法的个数，以及实现逻辑，会有的变种写法">
      <created>1641385815480</created>
      <option name="number" value="00078" />
      <option name="presentableId" value="LOCAL-00078" />
      <option name="project" value="LOCAL" />
      <updated>1641385815480</updated>
    </task>
    <task id="LOCAL-00079" summary="lambda表达式的写法 ： 根据函数式接口中，抽象方法参数的个数，以及实现逻辑，会有的变种写法">
      <created>1641386050925</created>
      <option name="number" value="00079" />
      <option name="presentableId" value="LOCAL-00079" />
      <option name="project" value="LOCAL" />
      <updated>1641386050925</updated>
    </task>
    <task id="LOCAL-00080" summary="lambda表达式的写法 ： 根据函数式接口中，抽象方法参数的个数，以及实现逻辑，会有的变种写法">
      <created>1641386346988</created>
      <option name="number" value="00080" />
      <option name="presentableId" value="LOCAL-00080" />
      <option name="project" value="LOCAL" />
      <updated>1641386346989</updated>
    </task>
    <task id="LOCAL-00081" summary="lambda表达式的写法 ： 根据函数式接口中，抽象方法参数的个数，以及实现逻辑，会有的变种写法">
      <created>1641386405688</created>
      <option name="number" value="00081" />
      <option name="presentableId" value="LOCAL-00081" />
      <option name="project" value="LOCAL" />
      <updated>1641386405688</updated>
    </task>
    <task id="LOCAL-00082" summary="lambda表达式的写法 ： 根据函数式接口中，抽象方法参数的个数，以及实现逻辑，会有的变种写法">
      <created>1641390473449</created>
      <option name="number" value="00082" />
      <option name="presentableId" value="LOCAL-00082" />
      <option name="project" value="LOCAL" />
      <updated>1641390473449</updated>
    </task>
    <task id="LOCAL-00083" summary="lambda表达式的写法 ： 根据函数式接口中，抽象方法参数的个数，以及实现逻辑，会有的变种写法">
      <created>1641390533603</created>
      <option name="number" value="00083" />
      <option name="presentableId" value="LOCAL-00083" />
      <option name="project" value="LOCAL" />
      <updated>1641390533603</updated>
    </task>
    <task id="LOCAL-00084" summary="lambda表达式的写法 ： 根据函数式接口中，抽象方法参数的个数，以及实现逻辑，会有的变种写法">
      <created>1641391238646</created>
      <option name="number" value="00084" />
      <option name="presentableId" value="LOCAL-00084" />
      <option name="project" value="LOCAL" />
      <updated>1641391238646</updated>
    </task>
    <task id="LOCAL-00085" summary="Function&lt;T, R&gt;  ： 用来接收有一个输入参数和一个输出值的函数赋值 ，T-输入参数类型，R-输出参数类型，一般输入和输出是不同类型的">
      <created>1641391846012</created>
      <option name="number" value="00085" />
      <option name="presentableId" value="LOCAL-00085" />
      <option name="project" value="LOCAL" />
      <updated>1641391846012</updated>
    </task>
    <task id="LOCAL-00086" summary="Function&lt;T, R&gt;  ： 用来接收有一个输入参数和一个输出值的函数赋值 ，T-输入参数类型，R-输出参数类型，一般输入和输出是不同类型的">
      <created>1641391864496</created>
      <option name="number" value="00086" />
      <option name="presentableId" value="LOCAL-00086" />
      <option name="project" value="LOCAL" />
      <updated>1641391864496</updated>
    </task>
    <task id="LOCAL-00087" summary="BiFunction&lt;T, R&gt;  ： 用来接收有一个输入参数和一个输出值的函数赋值 ，T-输入参数类型，R-输出参数类型，一般输入和输出是不同类型的">
      <created>1641478700916</created>
      <option name="number" value="00087" />
      <option name="presentableId" value="LOCAL-00087" />
      <option name="project" value="LOCAL" />
      <updated>1641478700916</updated>
    </task>
    <task id="LOCAL-00088" summary="BiFunction(T,U,R) ：代表函数有两个输入，一个输出">
      <created>1641478966541</created>
      <option name="number" value="00088" />
      <option name="presentableId" value="LOCAL-00088" />
      <option name="project" value="LOCAL" />
      <updated>1641478966541</updated>
    </task>
    <task id="LOCAL-00089" summary="Java 函数式接口---Supplier&lt;T&gt;：代表有一个输出，该对象可以作为lambda表达式或方法引用的赋值对象">
      <created>1641634982350</created>
      <option name="number" value="00089" />
      <option name="presentableId" value="LOCAL-00089" />
      <option name="project" value="LOCAL" />
      <updated>1641634982350</updated>
    </task>
    <task id="LOCAL-00090" summary="Java 函数式接口---Function&lt;T, R&gt;:代表有一个输入一个输出的函数（函数式接口）">
      <created>1641636287585</created>
      <option name="number" value="00090" />
      <option name="presentableId" value="LOCAL-00090" />
      <option name="project" value="LOCAL" />
      <updated>1641636287586</updated>
    </task>
    <task id="LOCAL-00091" summary="Java 函数式接口---Consumer&lt;T&gt;:代表一个可接收一个输入，无返回值的函数">
      <created>1641636767949</created>
      <option name="number" value="00091" />
      <option name="presentableId" value="LOCAL-00091" />
      <option name="project" value="LOCAL" />
      <updated>1641636767949</updated>
    </task>
    <task id="LOCAL-00092" summary="Java 函数式接口---BiFunction&lt;T, U, R&gt;:代表有两个输入一个输出的函数，一般输入和输出是不同类型的">
      <created>1641637384337</created>
      <option name="number" value="00092" />
      <option name="presentableId" value="LOCAL-00092" />
      <option name="project" value="LOCAL" />
      <updated>1641637384338</updated>
    </task>
    <task id="LOCAL-00093" summary="Java 函数式接口---BiConsumer&lt;T, U&gt;:代表有两个输入，无输出的函数">
      <created>1641637666688</created>
      <option name="number" value="00093" />
      <option name="presentableId" value="LOCAL-00093" />
      <option name="project" value="LOCAL" />
      <updated>1641637666688</updated>
    </task>
    <task id="LOCAL-00094" summary="Java 函数式接口---UnaryOperator&lt;T&gt;：代表有一个初入，一个输出的函数，输入和输出是相同类型的">
      <created>1641638264322</created>
      <option name="number" value="00094" />
      <option name="presentableId" value="LOCAL-00094" />
      <option name="project" value="LOCAL" />
      <updated>1641638264322</updated>
    </task>
    <task id="LOCAL-00095" summary="Java 函数式接口---BinaryOperator&lt;T&gt;:代表两个输入一个输出的函数，输入和输出是相同类型的。">
      <created>1641638654584</created>
      <option name="number" value="00095" />
      <option name="presentableId" value="LOCAL-00095" />
      <option name="project" value="LOCAL" />
      <updated>1641638654585</updated>
    </task>
    <task id="LOCAL-00096" summary="方法的引用---静态方法的引用">
      <created>1641643344690</created>
      <option name="number" value="00096" />
      <option name="presentableId" value="LOCAL-00096" />
      <option name="project" value="LOCAL" />
      <updated>1641643344690</updated>
    </task>
    <task id="LOCAL-00097" summary="方法的引用---静态方法的引用">
      <created>1641654774371</created>
      <option name="number" value="00097" />
      <option name="presentableId" value="LOCAL-00097" />
      <option name="project" value="LOCAL" />
      <updated>1641654774372</updated>
    </task>
    <task id="LOCAL-00098" summary="方法的引用---静态方法的引用,如果函数式接口方法的实现，恰好可以通过调用另一个已存在的方法来实现，那么就有可能使用方法的引用。">
      <created>1641700541160</created>
      <option name="number" value="00098" />
      <option name="presentableId" value="LOCAL-00098" />
      <option name="project" value="LOCAL" />
      <updated>1641700541160</updated>
    </task>
    <task id="LOCAL-00099" summary="方法的引用---静态方法的引用,如果函数式接口方法的实现，恰好可以通过调用另一个已存在的方法来实现，那么就有可能使用方法的引用。">
      <created>1641700600096</created>
      <option name="number" value="00099" />
      <option name="presentableId" value="LOCAL-00099" />
      <option name="project" value="LOCAL" />
      <updated>1641700600096</updated>
    </task>
    <task id="LOCAL-00100" summary="方法的引用---实例方法的引用，如果在使用方法引用时，要调用已存在的非静态方法，就有可能使用实例方法的引用，new instance">
      <created>1641701654180</created>
      <option name="number" value="00100" />
      <option name="presentableId" value="LOCAL-00100" />
      <option name="project" value="LOCAL" />
      <updated>1641701654180</updated>
    </task>
    <task id="LOCAL-00101" summary="方法的引用---实例方法的引用，如果在使用方法引用时，要调用已存在的非静态方法，就有可能使用实例方法的引用，new instance::methodName">
      <created>1641712299665</created>
      <option name="number" value="00101" />
      <option name="presentableId" value="LOCAL-00101" />
      <option name="project" value="LOCAL" />
      <updated>1641712299665</updated>
    </task>
    <task id="LOCAL-00102" summary="方法的引用---实例方法的引用，如果在使用方法引用时，要调用已存在的非静态方法，就有可能使用实例方法的引用，new instance::methodName">
      <created>1641712374961</created>
      <option name="number" value="00102" />
      <option name="presentableId" value="LOCAL-00102" />
      <option name="project" value="LOCAL" />
      <updated>1641712374962</updated>
    </task>
    <task id="LOCAL-00103" summary="方法的引用---对象方法的引用">
      <created>1641714247595</created>
      <option name="number" value="00103" />
      <option name="presentableId" value="LOCAL-00103" />
      <option name="project" value="LOCAL" />
      <updated>1641714247596</updated>
    </task>
    <task id="LOCAL-00104" summary="方法的引用---构造函数的方法引用">
      <created>1641715091215</created>
      <option name="number" value="00104" />
      <option name="presentableId" value="LOCAL-00104" />
      <option name="project" value="LOCAL" />
      <updated>1641715091216</updated>
    </task>
    <task id="LOCAL-00105" summary="方法的引用---构造函数的方法引用">
      <created>1641715153054</created>
      <option name="number" value="00105" />
      <option name="presentableId" value="LOCAL-00105" />
      <option name="project" value="LOCAL" />
      <updated>1641715153054</updated>
    </task>
    <task id="LOCAL-00106" summary="Stream Api--stream的创建">
      <created>1641732811362</created>
      <option name="number" value="00106" />
      <option name="presentableId" value="LOCAL-00106" />
      <option name="project" value="LOCAL" />
      <updated>1641732811362</updated>
    </task>
    <option name="localTasksCounter" value="107" />
    <servers />
  </component>
  <component name="TypeScriptGeneratedFilesManager">
    <option name="version" value="1" />
  </component>
  <component name="Vcs.Log.Tabs.Properties">
    <option name="TAB_STATES">
      <map>
        <entry key="MAIN">
          <value>
            <State>
              <option name="COLUMN_ORDER" />
            </State>
          </value>
        </entry>
      </map>
    </option>
  </component>
  <component name="VcsManagerConfiguration">
    <option name="ADD_EXTERNAL_FILES_SILENTLY" value="true" />
    <MESSAGE value="lambda之--什么是函数式接口" />
    <MESSAGE value="lambda之-demo" />
    <MESSAGE value="lambda之- 实现学生 按成绩、分数过滤，不使用lambda 及使用策略模式实现" />
    <MESSAGE value="lambda之- 实现学生 按成绩、分数过滤：基于V2使用 匿名内部类实现 的filter" />
    <MESSAGE value="lambda之- 实现学生 按成绩、分数过滤：基于V3，匿名内部类 可以写成lambda表达式" />
    <MESSAGE value="lambda表达式的写法" />
    <MESSAGE value="lambda表达式的写法 ： 根据函数式接口中，抽象方法的个数，以及实现逻辑，会有的变种写法" />
    <MESSAGE value="lambda表达式的写法 ： 根据函数式接口中，抽象方法参数的个数，以及实现逻辑，会有的变种写法" />
    <MESSAGE value="Function&lt;T, R&gt;  ： 用来接收有一个输入参数和一个输出值的函数赋值 ，T-输入参数类型，R-输出参数类型，一般输入和输出是不同类型的" />
    <MESSAGE value="BiFunction&lt;T, R&gt;  ： 用来接收有一个输入参数和一个输出值的函数赋值 ，T-输入参数类型，R-输出参数类型，一般输入和输出是不同类型的" />
    <MESSAGE value="BiFunction(T,U,R) ：代表函数有两个输入，一个输出" />
    <MESSAGE value="Java 函数式接口---Supplier&lt;T&gt;：代表有一个输出，该对象可以作为lambda表达式或方法引用的赋值对象" />
    <MESSAGE value="Java 函数式接口---Function&lt;T, R&gt;:代表有一个输入一个输出的函数（函数式接口）" />
    <MESSAGE value="Java 函数式接口---Consumer&lt;T&gt;:代表一个可接收一个输入，无返回值的函数" />
    <MESSAGE value="Java 函数式接口---BiFunction&lt;T, U, R&gt;:代表有两个输入一个输出的函数，一般输入和输出是不同类型的" />
    <MESSAGE value="Java 函数式接口---BiConsumer&lt;T, U&gt;:代表有两个输入，无输出的函数" />
    <MESSAGE value="Java 函数式接口---UnaryOperator&lt;T&gt;：代表有一个初入，一个输出的函数，输入和输出是相同类型的" />
    <MESSAGE value="Java 函数式接口---BinaryOperator&lt;T&gt;:代表两个输入一个输出的函数，输入和输出是相同类型的。" />
    <MESSAGE value="方法的引用---静态方法的引用" />
    <MESSAGE value="方法的引用---静态方法的引用,如果函数式接口方法的实现，恰好可以通过调用另一个已存在的方法来实现，那么就有可能使用方法的引用。" />
    <MESSAGE value="方法的引用---实例方法的引用，如果在使用方法引用时，要调用已存在的非静态方法，就有可能使用实例方法的引用，new instance" />
    <MESSAGE value="方法的引用---实例方法的引用，如果在使用方法引用时，要调用已存在的非静态方法，就有可能使用实例方法的引用，new instance::methodName" />
    <MESSAGE value="方法的引用---对象方法的引用" />
    <MESSAGE value="方法的引用---构造函数的方法引用" />
    <MESSAGE value="Stream Api--stream的创建" />
    <option name="LAST_COMMIT_MESSAGE" value="Stream Api--stream的创建" />
  </component>
  <component name="XDebuggerManager">
    <breakpoint-manager>
      <breakpoints>
        <line-breakpoint enabled="true" type="java-line">
          <url>file://$PROJECT_DIR$/src/collection/ListAndSet/Person.java</url>
          <line>44</line>
          <option name="timeStamp" value="1" />
        </line-breakpoint>
        <line-breakpoint enabled="true" type="java-line">
          <url>file://$PROJECT_DIR$/src/collection/Map/MapDemo.java</url>
          <line>49</line>
          <option name="timeStamp" value="2" />
        </line-breakpoint>
      </breakpoints>
    </breakpoint-manager>
  </component>
</project>